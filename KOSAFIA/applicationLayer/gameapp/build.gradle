plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'

	//노드 플러그인도 추가 리액트용 아직 테스트 덜됨 베타
	//id 'com.github.node-gradle.node' version '3.3.0'  // node plugin 추가
}

group = 'com.kosafia'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//스프링 웹 핵심
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'

	//레디스 의존성 살려놔
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//DB관련 의존성 JDBC MYBATIS MYSQL
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

	//개발자 도움 도구 
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	// JSP 관련 의존성 추가
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'

	// 도커 컴포즈 의존성 일단 제거
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	//스프링 시큐리티 의존성 일단 제거
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	// testImplementation 'org.springframework.security:spring-security-test'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// //STOMP를 위한 의존성 추가 실시간 기능 강화
	//--> 이제 필요 없어졌다는거 확인 위에 소켓에 내장된 라이브러리
	// implementation 'org.webjars:stomp-websocket:2.3.4'
	// implementation 'org.webjars:sockjs-client:1.5.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

// //==리액트용 추가=아직 실험중===
// node {
//     version = '18.16.0'  // 노드 버전
//     npmVersion = '9.5.1'  // npm 버전
//     download = true
//     workDir = file("${project.projectDir}/frontend")  // 노드 설치 위치
//     nodeModulesDir = file("${project.projectDir}/frontend")  // node_modules 위치
// }

// task copyReactBuild(type: Copy) {
//     from "${project.projectDir}/browser/build"  // React 빌드 결과물 위치
//     into "${project.projectDir}/src/main/resources/static"  // 스프링 부트 정적 파일 위치
// }

// task buildReact(type: Exec) {
//     workingDir "${project.projectDir}/browser"  // React 프로젝트 위치
//     commandLine 'npm', 'run', 'build'
//     dependsOn 'npm_install'
// }

// copyReactBuild.dependsOn buildReact
// bootJar.dependsOn copyReactBuild
