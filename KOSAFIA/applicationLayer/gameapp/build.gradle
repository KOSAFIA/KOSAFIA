plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'

	//노드 플러그인도 추가 리액트용 아직 테스트 덜됨 베타
	//id 'com.github.node-gradle.node' version '3.3.0'  // node plugin 추가
}

group = 'com.kosafia'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//스프링 웹 핵심
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	//그리고 추가로 소켓에서 데이터 주고 받을때 이거 추가해보라그래서 추가해봄
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


	//레디스 의존성 살려놔
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//DB관련 의존성 JDBC MYBATIS MYSQL
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

	//개발자 도움 도구 
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	// JSP 관련 의존성 추가
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'


	// Jackson의 JSR310 모듈
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.0'

	// 도커 컴포즈 의존성 일단 제거
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	//스프링 시큐리티 의존성 일단 제거
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	// testImplementation 'org.springframework.security:spring-security-test'

//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// BCryptPasswordEncoder를 사용하기 위해 필요한 Spring Security 의존성을 추가
 implementation 'org.springframework.boot:spring-boot-starter-security'
testImplementation 'org.springframework.security:spring-security-test'
 //구글oauth2 로그인
implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


}

// tasks.named('test') {
// 	useJUnitPlatform()
// }
